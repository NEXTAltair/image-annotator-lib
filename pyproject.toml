[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "image-annotator-lib"
version = "0.1.2"
description = "Integrated library for image tagging and scoring."
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
authors = [{ name = "NEXTAltair" }]
keywords = [ # Merged keywords
    "ai",
    "machine-learning",
    "tagging",
    "image-annotation",
    "computer-vision",
]

classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",                     # Updated based on source tomls
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",                         # Keep general, specific handled by deps
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Graphics",
]

dependencies = [
    # Core & Data Handling
    "numpy>=1.26.0",
    "pandas>=2.0.0",
    "Pillow>=10.0.0",
    "polars",
    "toml",
    "tensorflow>=2.19.0;platform_system!='Darwin'", # Use newer version from scorer
    "transformers>=4.27.4",
    "tf-keras>=2.19.0",
    "accelerate>=0.26.0",
    "diffusers>=0.24.0",
    "huggingface_hub>=0.19.0",
    "onnxruntime>=1.16.0",
    "onnxruntime-gpu>=1.16.0;platform_system!='Darwin'",
    "safetensors>=0.4.0",
    "timm>=0.9.0",
    "google-genai",
    "openai",
    "anthropic",
    "dotenv",
    # Image Processing & Utils
    "opencv-python>=4.8.0",
    "requests>=2.31.0",
    "tqdm>=4.66.0",
    "imagehash", # For pHash calculation in base.py
    "pillow>=9.0.0",
    "loguru",
    "torch>=2.6.0",
    "torchvision>=0.21.0",
]

[project.optional-dependencies]

[dependency-groups]
dev = [
    "pytest>=8.0.0",
    "pytest-bdd>=8.0.0",
    "pytest-clarity>=1.0.1",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
    "pytest-playwright",
    "mypy>=1.8.0",
    "ruff>=0.2.0",
    "types-requests>=2.32.0",
    "types-Pillow",
    "types-toml",
    "psutil",
    "pytest-mock" # テストモック用
]

[project.urls]
Homepage = "https://github.com/user/image-annotator-lib"       # 仮
Repository = "https://github.com/user/image-annotator-lib.git" # 仮

[tool.ruff]
fix = true
line-length = 108
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "RUF", # Ruff-specific rules
]

exclude = [
    "*/__pycache__"
]

ignore = [
    "E501",   # Line too long (handled by formatter)
    "RUF002", # カタカナの `ノ` でなにか言われるのを回避
]
fixable = ["ALL"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true


[tool.pytest.ini_options]
pythonpath = ["src"]          # テスト実
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = ["-v", "-s", "-ra", "--tb=short", "--showlocals", "--cov=src", "--cov-report=xml"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "gui: GUI tests",
    "slow: Tests that take more time",
]

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/__init__.py",
    "src/image_annotator_lib/exceptions/*",
]

[tool.coverage.report]
fail_under = 75 # カバレッジが75%未満なら失敗
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "if __name__ == .__main__.:",
    "@(abc\\.)?abstractmethod",
    "\\.\\.\\.",                  # ... (Ellipsis)
]

[tool.hatch.build.targets.wheel]
packages = ["src/image_annotator_lib"]

[tool.hatch.build.targets.sdist]
include = ["/src", "/tests"]

[tool.hatch.build.targets.wheel.sources]
"src" = ""

[tool.hatch.build.targets.wheel.shared-data]
"src/image_annotator_lib/py.typed" = "image_annotator_lib/py.typed"

[tool.poetry.dependencies]
imagehash = "^4.3.1" # pHash計算用
