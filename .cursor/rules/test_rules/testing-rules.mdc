---
description: テスト方針
globs: 
alwaysApply: false
---
Version 1.0.0
# テスト方針

## 基本方針

- 各機能にはテストを作成し、十分なテストカバレッジを確保する。

## BDD (振る舞い駆動開発) の基本

- **Feature**:
  - テスト対象となる機能やユーザーストーリーを記述する。
  - ユーザー視点での価値や目的を明確にすることが重要である。
  - 具体的な関数名、メソッド名、ファイル名、Pathなどは含めないこと。
- **Scenario**:
  - Feature 内の具体的な振る舞いを検証する個別のテストケースである。
  - 一つのシナリオでは、一つの振る舞いに焦点を当てる。
- **Given / When / Then**:
  - **Given**: テスト実行前のシステムの初期状態や前提条件を設定する。
  - **When**: ユーザーの操作や、システムに対する特定のアクションを記述する。
  - **Then**: When のアクションによって期待される結果やシステムの応答を検証する。

## 異常系テスト

- **基本的な考え方**: 主要な正常系のパスがある程度確認できた段階で、代表的な異常系（エラーハンドリング、不正な入力、境界値など）のシナリオも計画・実装することを推奨する｡
- **デバッグ時の活用**: 正常系のテストが失敗した場合、その原因究明や特定の失敗パターンを再現するために、追加で異常系のシナリオを作成するアプローチも有効である。
- **目的**: 異常系テストは、システムが予期せぬ状況下でも安全に動作（クラッシュしない、意図しない挙動をしない、適切なエラーを示すなど）することを確認するために重要である。

## テストの執行

- `uv run pytest` コマンドで実行する
- コマンドオプションは必要に応じて使い分ける
- カバレッジの測定結果は `XML` として出力する